# SQL queries used in expression/phenotype queries
# Transgene
transgene = SELECT DISTINCT fbbt.cvterm_name AS anatomy, teg.transgene_name, teg.transgene_uniquename, pub.miniref, pub.uniquename AS fbrf, fbbt.accession \
   FROM vfbview_fbbt fbbt \
   JOIN expression_cvterm ec1 ON (fbbt.cvterm_id = ec1.cvterm_id) \
   JOIN expression_cvterm ec2 ON (ec2.expression_id = ec1.expression_id) \
   JOIN cvterm stage ON (stage.cvterm_id = ec2.cvterm_id) \
   JOIN feature_expression fe ON (ec1.expression_id = fe.expression_id) \
   JOIN pub ON (fe.pub_id = pub.pub_id) \
   JOIN vfbview_transgene_expressed_gp teg ON (teg.gp_feature_id = fe.feature_id) \
   WHERE fbbt.accession IN ( XXX )

#Gene expression 
geneex = SELECT DISTINCT fbbt.cvterm_name AS anatomy, geg.gene_name, geg.gene_uniquename, pub.miniref, pub.uniquename AS fbrf, fbbt.accession \
   FROM vfbview_fbbt fbbt \
   JOIN expression_cvterm ec1 ON (fbbt.cvterm_id = ec1.cvterm_id) \
   JOIN expression_cvterm ec2 ON (ec2.expression_id = ec1.expression_id) \
   JOIN cvterm stage ON (stage.cvterm_id = ec2.cvterm_id) \
   JOIN feature_expression fe ON (ec1.expression_id = fe.expression_id) \
   JOIN pub ON (fe.pub_id = pub.pub_id) \
   JOIN vfbview_gene_expressed_gp geg ON (geg.gp_feature_id = fe.feature_id) \
   WHERE fbbt.accession IN ( XXX )
# Phenotype  			
phenotype = SELECT DISTINCT fbbt.cvterm_name, vpf.name as feature, vpf.uniquename as fbid, pub.miniref, pub.uniquename as fbrf, fbbt.accession AS fbbt_accession \
       		FROM vfbview_fbbt fbbt \
       		JOIN phenotype p ON (fbbt.cvterm_id=p.observable_id) \
		    JOIN phenstatement ps ON (p.phenotype_id=ps.phenotype_id) \
       		JOIN pub ON (ps.pub_id = pub.pub_id) \
       		JOIN vfbview_phenstatement_feature vpf ON (vpf.phenstatement_id=ps.phenstatement_id) \
       		AND fbbt.accession IN ( XXX )       		
       		
# New, faster query to retrieve pubminirefs for a Onotology bean       		
pubminiref = SELECT uniquename, miniref, accession FROM vfbview_pubminiref WHERE accession = 'XXX'
#Old Query, not based on the composite view table
#pubminiref = SELECT pub.uniquename  AS uniquename, pub.miniref AS miniref, qdbx.accession AS accession \
#			FROM cvterm query, dbxref qdbx, dbxref xdbx, db qdb, db xdb, cvterm_dbxref cvt_dbx, pub \ 
#			WHERE qdb.name ='FBbt' \ 
#			AND qdbx.db_id = qdb.db_id \ 
#			AND query.dbxref_id = qdbx.dbxref_id \	 
#			AND query.cvterm_id=cvt_dbx.cvterm_id \ 
#			AND cvt_dbx.dbxref_id=xdbx.dbxref_id \
#			AND xdbx.db_id = xdb.db_id \ 
#			AND xdb.name='FlyBase' \ 
#			AND xdbx.accession=pub.uniquename \ 
#			AND qdbx.accession = '00000153'

# Third party integration query
#getAllThirdParty = SELECT l.fbid, l.remoteid, l.source_name, l.thumb_name, l.local_stack_url, s.base_url, s.thumb_local_base, s.stack_local_base, s. descr \
#					FROM third_party_site_lookup l join third_party_site_source s on (source_name = name)
					
getAllThirdParty = 	SELECT l.vfbid, f.fbid, l.remoteid, l.source_name, l.thumb_name, l.local_stack_url, s.base_url, s.thumb_local_base, s.stack_local_base, s. descr, l.display_name, \
			f.stack_type, f.complete_expression_pattern \
			FROM third_party_site_lookup l \
			JOIN third_party_site_source s ON (l.source_name = s.name)  \
			LEFT OUTER JOIN third_party_flybase_lookup f on (f.vfbid=l.vfbid) 

# User management queries
userForId =	SELECT u.username, u.password, d.firstname, d.surname, d.institution, d.position, d.email, d.phone, d.notes, u.enabled, d.email4Newsletter, a.authority \
			FROM users u, user_detail d, authorities a WHERE u.username = d.username AND a.username = u.username AND u.username = 'XXX'

# Stack management queries
stackForId = select id, name, size, username, geneid, genename, url, third_party_url, description from stack where id = 'XXX';

insertIntoStack = insert into stack values(?, ?, ?, ?, ?, ?, ?, ?, ?);

updateStack =  UPDATE stack SET name=?, size=?, username=?, geneid=? , genename=?, url=?, third_party_url=?, description=? where id=?;

deleteStack = delete from stack where id ='XXX';

# Stack search and display queries
stacksAll = select id, name, size, username, geneid, genename, url, third_party_url, description from stack;